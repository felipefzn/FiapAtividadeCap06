name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - staging
  pull_request:
    branches:
      - master

jobs:
  # Job de Build e Teste
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build

      - name: Test
        run: dotnet test

  # Job de Deploy para Staging
  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/staging'  # Apenas faz deploy para staging quando o push for na branch staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Staging
        run: |
          echo "Deploying to staging..."
          # Aqui você coloca os comandos reais para fazer o deploy no seu servidor de staging.
          # Exemplo de deploy via SSH ou para uma plataforma:
          # ssh user@staging-server 'docker pull your-docker-image && docker-compose up -d'
          
          # Se estiver usando uma plataforma como AWS, GCP ou Azure, substitua por comandos específicos

  # Job de Deploy para Produção
  deploy-to-production:
    runs-on: ubuntu-latest
    needs: deploy-to-staging  # Esse job depende do sucesso do deploy em staging
    if: github.ref == 'refs/heads/master'  # Apenas faz deploy para produção quando o push for na branch master

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Production
        run: |
          echo "Deploying to production..."
          # Aqui você coloca os comandos reais para fazer o deploy no seu servidor de produção.
          # Exemplo de deploy via SSH ou para uma plataforma:
          # ssh user@production-server 'docker pull your-docker-image && docker-compose up -d'
          
          # Se estiver usando uma plataforma como AWS, GCP ou Azure, substitua por comandos específicos
